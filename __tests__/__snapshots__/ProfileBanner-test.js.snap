// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Profile Banner Snapshot Test 1`] = `
<View
  style={
    Object {
      "flexDirection": "row",
      "paddingHorizontal": 5,
      "paddingVertical": 5,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#6200ee",
            "borderRadius": 37.5,
            "height": 75,
            "width": 75,
          },
          undefined,
        ]
      }
    >
      <Image
        source={
          Object {
            "uri": undefined,
          }
        }
        style={
          Object {
            "borderRadius": 37.5,
            "height": 75,
            "width": 75,
          }
        }
      />
    </View>
  </View>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 25,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "white",
            "borderColor": "white",
            "borderRadius": 16,
            "borderStyle": "solid",
            "borderWidth": 0.5,
            "elevation": 0,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityStates={Array []}
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 16,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingHorizontal": 4,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "System",
                    "fontWeight": "400",
                    "textAlign": "left",
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                      "marginVertical": 4,
                      "minHeight": 24,
                      "textAlignVertical": "center",
                    },
                    Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "System",
                      "fontWeight": "400",
                      "marginLeft": 8,
                      "marginRight": 8,
                    },
                    undefined,
                  ],
                ]
              }
            >
              Followers 
              0
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "backgroundColor": "white",
            "borderColor": "white",
            "borderRadius": 16,
            "borderStyle": "solid",
            "borderWidth": 0.5,
            "elevation": 0,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityStates={Array []}
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 16,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingHorizontal": 4,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "System",
                    "fontWeight": "400",
                    "textAlign": "left",
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                      "marginVertical": 4,
                      "minHeight": 24,
                      "textAlignVertical": "center",
                    },
                    Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "System",
                      "fontWeight": "400",
                      "marginLeft": 8,
                      "marginRight": 8,
                    },
                    undefined,
                  ],
                ]
              }
            >
              Following 
              0
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "white",
            "borderColor": "white",
            "borderRadius": 16,
            "borderStyle": "solid",
            "borderWidth": 0.5,
            "elevation": 0,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityStates={Array []}
          accessible={true}
          focusable={false}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 16,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingHorizontal": 4,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "System",
                    "fontWeight": "400",
                    "textAlign": "left",
                  },
                  Array [
                    Object {
                      "lineHeight": 24,
                      "marginVertical": 4,
                      "minHeight": 24,
                      "textAlignVertical": "center",
                    },
                    Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "System",
                      "fontWeight": "400",
                      "marginLeft": 8,
                      "marginRight": 8,
                    },
                    undefined,
                  ],
                ]
              }
            >
              Posts 
              NaN
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
